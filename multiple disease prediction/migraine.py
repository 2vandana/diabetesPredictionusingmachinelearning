# -*- coding: utf-8 -*-
"""Migranine.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12u-AJkX8jPympIuWv9KupQ_dkk-3Y9tC
"""

import pandas as pd
import numpy as np
#from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score

migraine_dataset = pd.read_csv('"D:/Downloads/Migraine.csv"')

migraine_dataset.head()

migraine_dataset.tail()

migraine_dataset.shape

migraine_dataset['Type'].value_counts()

migraine_dataset.groupby('Type').mean()

X=migraine_dataset.drop(columns='Type', axis=1)

Y=migraine_dataset['Type']

print(X)

print(Y)

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, stratify=Y, random_state=2)

print(X.shape, X_train.shape , X_test.shape)

classifier = svm.SVC(kernel='linear')

classifier.fit(X_train, Y_train)

X_train_prediciton = classifier.predict(X_train)

training_data_accuracy = accuracy_score(X_train_prediciton, Y_train)

print('Accuracy on training data: ', training_data_accuracy)

X_test_prediciton = classifier.predict(X_test)

test_data_accuracy = accuracy_score(X_test_prediciton, Y_test)

print('Accuracy on test data: ', test_data_accuracy)

"""building predictive system"""

input_data=(30,1,5,1,1,2,1,0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0)
# change the input data to a numpy array
input_data_as_numpy_array = np.asarray(input_data)

# reshape the numpy array as we are predicting for one datapoint
input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

prediction = classifier.predict(X_test)
print(prediction)

if (prediction[0] == 0):
  print('The migraine is present')

else:
  print('The migraine is not present')

